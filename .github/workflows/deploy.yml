name: Deploy to Cloud Run

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Google Auth
        id: auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
          project_id: replix-394315

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: replix-394315

      - name: Authorize Docker push
        run: gcloud auth configure-docker us-central1-docker.pkg.dev

      - name: Build Docker image
        run: docker compose -f docker-compose.yml build

      - name: Tag Docker image
        run: docker tag deno-image us-central1-docker.pkg.dev/replix-394315/deno-repository/deno-cloudrun-image:${{ github.sha }}

      - name: Push Docker image
        run: docker push us-central1-docker.pkg.dev/replix-394315/deno-repository/deno-cloudrun-image:${{ github.sha }}

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: deno-service
          image: us-central1-docker.pkg.dev/replix-394315/deno-repository/deno-cloudrun-image:${{ github.sha }}
          region: us-central1
          env_vars: ENV=PRODUCTION
          flags: --allow-unauthenticated

      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}

      - name: Clean up old images
        if: success()
        run: |
          # List digests of all images except the current one
          CURRENT_SHA=${{ github.sha }}
          echo "Current image SHA: $CURRENT_SHA"

          # List all image digests except the current one and 'latest' tag if it exists
          IMAGE_DIGESTS=$(gcloud artifacts docker images list us-central1-docker.pkg.dev/replix-394315/deno-repository/deno-cloudrun-image --format="get(digest)" | grep -v "$(gcloud artifacts docker images describe us-central1-docker.pkg.dev/replix-394315/deno-repository/deno-cloudrun-image:$CURRENT_SHA --format='get(digest)')")

          # Delete each old image digest
          for DIGEST in $IMAGE_DIGESTS; do
            echo "Deleting image with digest: $DIGEST"
            gcloud artifacts docker images delete us-central1-docker.pkg.dev/replix-394315/deno-repository/deno-cloudrun-image@$DIGEST --quiet
          done
